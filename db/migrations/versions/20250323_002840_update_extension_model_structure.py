"""update_extension_model_structure

Revision ID: 10ed3b1e2663
Revises: 8a60f2095890
Create Date: 2025-03-23 00:28:40.453832+09:00

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = "10ed3b1e2663"
down_revision = "8a60f2095890"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 既存のテーブルを削除
    op.drop_index("ix_extensions_id", table_name="extensions")
    op.drop_index("ix_extensions_name", table_name="extensions")
    op.drop_table("extensions")

    # 新しい extensions テーブルを作成
    op.create_table(
        "extensions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("version", sa.String(), nullable=True),
        sa.Column("enabled", sa.Boolean(), default=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("cmd", sa.String(), nullable=True),
        sa.Column("args", sa.JSON(), nullable=True),
        sa.Column("timeout", sa.Integer(), nullable=True),
        sa.Column("envs", sa.JSON(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_extensions_id"), "extensions", ["id"], unique=False)
    op.create_index(op.f("ix_extensions_name"), "extensions", ["name"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "extensions",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("version", sa.VARCHAR(), nullable=True),
        sa.Column("enabled", sa.BOOLEAN(), nullable=True),
        sa.Column("config", sqlite.JSON(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_extensions_name", "extensions", ["name"], unique=1)
    op.create_index("ix_extensions_id", "extensions", ["id"], unique=False)
    op.create_table(
        "task_templates",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("user_id", sa.INTEGER(), nullable=True),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("task_type", sa.VARCHAR(), nullable=False),
        sa.Column("prompt", sa.TEXT(), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_task_templates_task_type", "task_templates", ["task_type"], unique=False)
    op.create_index("ix_task_templates_name", "task_templates", ["name"], unique=False)
    op.create_index("ix_task_templates_id", "task_templates", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("username", sa.VARCHAR(), nullable=False),
        sa.Column("email", sa.VARCHAR(), nullable=False),
        sa.Column("hashed_password", sa.VARCHAR(), nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), nullable=True),
        sa.Column("is_admin", sa.BOOLEAN(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_users_username", "users", ["username"], unique=1)
    op.create_index("ix_users_id", "users", ["id"], unique=False)
    op.create_index("ix_users_email", "users", ["email"], unique=1)
    op.create_table(
        "actions",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("action_type", sa.VARCHAR(), nullable=False),
        sa.Column("task_template_id", sa.INTEGER(), nullable=True),
        sa.Column("is_enabled", sa.BOOLEAN(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.Column("last_triggered_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["task_template_id"],
            ["task_templates.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_actions_name", "actions", ["name"], unique=False)
    op.create_index("ix_actions_id", "actions", ["id"], unique=False)
    op.create_index("ix_actions_action_type", "actions", ["action_type"], unique=False)
    op.create_table(
        "task_executions",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("template_id", sa.INTEGER(), nullable=False),
        sa.Column("user_id", sa.INTEGER(), nullable=True),
        sa.Column("context", sqlite.JSON(), nullable=True),
        sa.Column("result", sa.TEXT(), nullable=True),
        sa.Column("extensions_output", sqlite.JSON(), nullable=True),
        sa.Column("status", sa.VARCHAR(), nullable=False),
        sa.Column("error", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.Column("completed_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["template_id"],
            ["task_templates.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_task_executions_status", "task_executions", ["status"], unique=False)
    op.create_index("ix_task_executions_id", "task_executions", ["id"], unique=False)
    op.create_table(
        "action_config",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("action_id", sa.INTEGER(), nullable=False),
        sa.Column("config_type", sa.VARCHAR(length=7), nullable=False),
        sa.Column("config_id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["action_id"],
            ["actions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_action_config_id", "action_config", ["id"], unique=False)
    op.create_table(
        "tasks",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("user_id", sa.INTEGER(), nullable=True),
        sa.Column("name", sa.VARCHAR(), nullable=True),
        sa.Column("task_type", sa.VARCHAR(), nullable=False),
        sa.Column("context", sqlite.JSON(), nullable=True),
        sa.Column("prompt", sa.TEXT(), nullable=False),
        sa.Column("result", sa.TEXT(), nullable=True),
        sa.Column("extensions_output", sqlite.JSON(), nullable=True),
        sa.Column("status", sa.VARCHAR(), nullable=False),
        sa.Column("error", sa.TEXT(), nullable=True),
        sa.Column("is_template", sa.BOOLEAN(), nullable=True),
        sa.Column("parent_id", sa.INTEGER(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.Column("completed_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["tasks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_tasks_task_type", "tasks", ["task_type"], unique=False)
    op.create_index("ix_tasks_status", "tasks", ["status"], unique=False)
    op.create_index("ix_tasks_name", "tasks", ["name"], unique=False)
    op.create_index("ix_tasks_id", "tasks", ["id"], unique=False)
    op.create_table(
        "settings",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("key", sa.VARCHAR(), nullable=False),
        sa.Column("value", sqlite.JSON(), nullable=True),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_settings_key", "settings", ["key"], unique=1)
    op.create_index("ix_settings_id", "settings", ["id"], unique=False)
    op.create_table(
        "config_discord",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("catch_type", sa.VARCHAR(length=15), nullable=False),
        sa.Column("catch_value", sa.VARCHAR(), nullable=False),
        sa.Column("message_type", sa.VARCHAR(length=6), nullable=False),
        sa.Column("response_format", sa.VARCHAR(length=7), nullable=False),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_config_discord_name", "config_discord", ["name"], unique=False)
    op.create_index("ix_config_discord_id", "config_discord", ["id"], unique=False)
    # ### end Alembic commands ###
