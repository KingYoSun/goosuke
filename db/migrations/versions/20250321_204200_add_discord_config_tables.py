"""add discord config tables

Revision ID: 5f39e8072567
Revises: 4e28d9061456
Create Date: 2025-03-21 20:42:00.000000+09:00

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "5f39e8072567"
down_revision = "4e28d9061456"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Discord設定テーブルの作成
    op.create_table(
        "config_discord",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "catch_type", sa.Enum("reaction", "text", "textWithMention", name="discord_catch_type"), nullable=False
        ),
        sa.Column("catch_value", sa.String(), nullable=False),
        sa.Column("message_type", sa.Enum("single", "thread", "range", name="discord_message_type"), nullable=False),
        sa.Column("response_format", sa.Enum("reply", "dm", "channel", name="discord_response_format"), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_config_discord_id"), "config_discord", ["id"], unique=False)
    op.create_index(op.f("ix_config_discord_name"), "config_discord", ["name"], unique=False)

    # アクション設定関連テーブルの作成
    op.create_table(
        "action_config",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("action_id", sa.Integer(), nullable=False),
        sa.Column("config_type", sa.Enum("discord", "slack", name="config_type"), nullable=False),
        sa.Column("config_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["action_id"],
            ["actions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_action_config_id"), "action_config", ["id"], unique=False)

    # 既存の鉛筆リアクション機能をデータベースに登録
    # 1. Discord設定レコードの作成
    op.execute(
        """
        INSERT INTO config_discord (name, catch_type, catch_value, message_type, response_format)
        VALUES ('鉛筆リアクション要約', 'reaction', '✏️', 'single', 'reply')
        """
    )

    # 2. タスクレコードの作成（既存のタスクがない場合）
    op.execute(
        """
        INSERT INTO tasks (name, task_type, prompt, is_template, status)
        SELECT 'Discord会議要約', 'discord_summary',
        'メッセージを簡潔に要約してください。重要なポイントを箇条書きでまとめ、その後に要約文を作成してください。
要約文にANSIコードを付与しないでください。', true, 'pending'
        WHERE NOT EXISTS (SELECT 1 FROM tasks WHERE name = 'Discord会議要約' AND task_type = 'discord_summary')
        """
    )

    # 3. アクションレコードの作成（既存のアクションがない場合）
    op.execute(
        """
        INSERT INTO actions (name, action_type, task_id, is_enabled)
        SELECT 'Discord会議要約', 'discord', id, true
        FROM tasks
        WHERE name = 'Discord会議要約' AND task_type = 'discord_summary'
        AND NOT EXISTS (SELECT 1 FROM actions WHERE name = 'Discord会議要約' AND action_type = 'discord')
        LIMIT 1
        """
    )

    # 4. アクション設定関連レコードの作成
    op.execute(
        """
        INSERT INTO action_config (action_id, config_type, config_id)
        SELECT a.id, 'discord', c.id
        FROM actions a, config_discord c
        WHERE a.name = 'Discord会議要約' AND c.name = '鉛筆リアクション要約'
        """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # アクション設定関連テーブルの削除
    op.drop_index(op.f("ix_action_config_id"), table_name="action_config")
    op.drop_table("action_config")

    # Discord設定テーブルの削除
    op.drop_index(op.f("ix_config_discord_name"), table_name="config_discord")
    op.drop_index(op.f("ix_config_discord_id"), table_name="config_discord")
    op.drop_table("config_discord")

    # Enumタイプの削除
    op.execute("DROP TYPE IF EXISTS config_type")
    op.execute("DROP TYPE IF EXISTS discord_response_format")
    op.execute("DROP TYPE IF EXISTS discord_message_type")
    op.execute("DROP TYPE IF EXISTS discord_catch_type")
    # ### end Alembic commands ###
