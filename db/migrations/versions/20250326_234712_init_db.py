"""init_db

Revision ID: 6b2dc43060f0
Revises:
Create Date: 2025-03-26 23:47:12.526087+09:00

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = "6b2dc43060f0"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("task_templates", schema=None) as batch_op:
        batch_op.drop_index("ix_task_templates_id")
        batch_op.drop_index("ix_task_templates_name")
        batch_op.drop_index("ix_task_templates_task_type")

    op.drop_table("task_templates")
    with op.batch_alter_table("task_executions", schema=None) as batch_op:
        batch_op.drop_index("ix_task_executions_id")
        batch_op.drop_index("ix_task_executions_status")

    op.drop_table("task_executions")
    with op.batch_alter_table("actions", schema=None) as batch_op:
        batch_op.drop_index("ix_actions_action_type")
        batch_op.drop_index("ix_actions_id")
        batch_op.drop_index("ix_actions_name")

    op.drop_table("actions")
    with op.batch_alter_table("extensions", schema=None) as batch_op:
        batch_op.drop_index("ix_extensions_id")
        batch_op.drop_index("ix_extensions_name")

    op.drop_table("extensions")
    with op.batch_alter_table("config_discord", schema=None) as batch_op:
        batch_op.drop_index("ix_config_discord_id")
        batch_op.drop_index("ix_config_discord_name")

    op.drop_table("config_discord")
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index("ix_users_email")
        batch_op.drop_index("ix_users_id")
        batch_op.drop_index("ix_users_username")

    op.drop_table("users")
    with op.batch_alter_table("settings", schema=None) as batch_op:
        batch_op.drop_index("ix_settings_id")
        batch_op.drop_index("ix_settings_key")

    op.drop_table("settings")
    with op.batch_alter_table("action_config", schema=None) as batch_op:
        batch_op.drop_index("ix_action_config_id")

    op.drop_table("action_config")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "action_config",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("action_id", sa.INTEGER(), nullable=False),
        sa.Column("config_type", sa.VARCHAR(length=7), nullable=False),
        sa.Column("config_id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["action_id"],
            ["actions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("action_config", schema=None) as batch_op:
        batch_op.create_index("ix_action_config_id", ["id"], unique=False)

    op.create_table(
        "settings",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("key", sa.VARCHAR(), nullable=False),
        sa.Column("value", sqlite.JSON(), nullable=True),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("is_secret", sa.BOOLEAN(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("settings", schema=None) as batch_op:
        batch_op.create_index("ix_settings_key", ["key"], unique=1)
        batch_op.create_index("ix_settings_id", ["id"], unique=False)

    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("username", sa.VARCHAR(), nullable=False),
        sa.Column("email", sa.VARCHAR(), nullable=False),
        sa.Column("hashed_password", sa.VARCHAR(), nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), nullable=True),
        sa.Column("is_admin", sa.BOOLEAN(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index("ix_users_username", ["username"], unique=1)
        batch_op.create_index("ix_users_id", ["id"], unique=False)
        batch_op.create_index("ix_users_email", ["email"], unique=1)

    op.create_table(
        "config_discord",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("catch_type", sa.VARCHAR(length=15), nullable=False),
        sa.Column("catch_value", sa.VARCHAR(), nullable=False),
        sa.Column("message_type", sa.VARCHAR(length=6), nullable=False),
        sa.Column("response_format", sa.VARCHAR(length=7), nullable=False),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("config_discord", schema=None) as batch_op:
        batch_op.create_index("ix_config_discord_name", ["name"], unique=False)
        batch_op.create_index("ix_config_discord_id", ["id"], unique=False)

    op.create_table(
        "extensions",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("version", sa.VARCHAR(), nullable=True),
        sa.Column("enabled", sa.BOOLEAN(), nullable=True),
        sa.Column("type", sa.VARCHAR(), nullable=True),
        sa.Column("cmd", sa.VARCHAR(), nullable=True),
        sa.Column("args", sqlite.JSON(), nullable=True),
        sa.Column("timeout", sa.INTEGER(), nullable=True),
        sa.Column("envs", sqlite.JSON(), nullable=True),
        sa.Column("secrets", sqlite.JSON(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("extensions", schema=None) as batch_op:
        batch_op.create_index("ix_extensions_name", ["name"], unique=1)
        batch_op.create_index("ix_extensions_id", ["id"], unique=False)

    op.create_table(
        "actions",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("action_type", sa.VARCHAR(), nullable=False),
        sa.Column("task_template_id", sa.INTEGER(), nullable=True),
        sa.Column("is_enabled", sa.BOOLEAN(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.Column("last_triggered_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["task_template_id"],
            ["task_templates.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("actions", schema=None) as batch_op:
        batch_op.create_index("ix_actions_name", ["name"], unique=False)
        batch_op.create_index("ix_actions_id", ["id"], unique=False)
        batch_op.create_index("ix_actions_action_type", ["action_type"], unique=False)

    op.create_table(
        "task_executions",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("template_id", sa.INTEGER(), nullable=False),
        sa.Column("user_id", sa.INTEGER(), nullable=True),
        sa.Column("context", sqlite.JSON(), nullable=True),
        sa.Column("result", sa.TEXT(), nullable=True),
        sa.Column("extensions_output", sqlite.JSON(), nullable=True),
        sa.Column("status", sa.VARCHAR(), nullable=False),
        sa.Column("error", sa.TEXT(), nullable=True),
        sa.Column("mcp_response_required", sa.BOOLEAN(), nullable=True),
        sa.Column("mcp_response_sent", sa.BOOLEAN(), nullable=True),
        sa.Column("mcp_response_data", sqlite.JSON(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.Column("completed_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["template_id"],
            ["task_templates.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("task_executions", schema=None) as batch_op:
        batch_op.create_index("ix_task_executions_status", ["status"], unique=False)
        batch_op.create_index("ix_task_executions_id", ["id"], unique=False)

    op.create_table(
        "task_templates",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("user_id", sa.INTEGER(), nullable=True),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("task_type", sa.VARCHAR(), nullable=False),
        sa.Column("prompt", sa.TEXT(), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("task_templates", schema=None) as batch_op:
        batch_op.create_index("ix_task_templates_task_type", ["task_type"], unique=False)
        batch_op.create_index("ix_task_templates_name", ["name"], unique=False)
        batch_op.create_index("ix_task_templates_id", ["id"], unique=False)

    # ### end Alembic commands ###
